name: Deploy Project Management App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Setup test environment
      run: |
        cd backend
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        echo "PORT=4000" >> .env
        echo "NODE_ENV=test" >> .env
        echo "FRONTEND_URL=http://localhost:3000" >> .env
    
    - name: Run backend build
      run: |
        cd backend
        npm run build
    
    - name: Run frontend build
      env:
        REACT_APP_API_URL: http://localhost:4000
      run: |
        cd frontend
        npm run build
    
    - name: Run backend tests
      run: |
        cd backend
        npm test
    
    - name: Run frontend tests
      run: |
        cd frontend
        CI=true npm test -- --coverage --watchAll=false

  deploy-backend:
    name: Deploy Backend to Heroku
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy Backend to Heroku
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME_BACKEND }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "backend"
        usedocker: false
        env_file: ".env.production"
    
    - name: Set Heroku Config Vars
      run: |
        # Install Heroku CLI
        curl https://cli-assets.heroku.com/install.sh | sh
        
        # Set environment variables
        echo "${{ secrets.HEROKU_API_KEY }}" | heroku auth:token
        heroku config:set DATABASE_URL="${{ secrets.DATABASE_URL }}" --app ${{ secrets.HEROKU_APP_NAME_BACKEND }}
        heroku config:set NODE_ENV=production --app ${{ secrets.HEROKU_APP_NAME_BACKEND }}
        heroku config:set FRONTEND_URL="${{ secrets.FRONTEND_URL }}" --app ${{ secrets.HEROKU_APP_NAME_BACKEND }}

  deploy-frontend:
    name: Deploy Frontend to Heroku
    needs: [test, deploy-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js for build
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend with production API URL
      env:
        REACT_APP_API_URL: https://${{ secrets.HEROKU_APP_NAME_BACKEND }}.herokuapp.com
        GENERATE_SOURCEMAP: false
      run: |
        cd frontend
        npm run build
    
    - name: Deploy Frontend to Heroku
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME_FRONTEND }}
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "frontend"
        usedocker: false

  notify:
    name: Notify Deployment Status
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deployment Success
      if: needs.deploy-backend.result == 'success' && needs.deploy-frontend.result == 'success'
      run: |
        echo "üéâ Deployment successful!"
        echo "Backend: https://${{ secrets.HEROKU_APP_NAME_BACKEND }}.herokuapp.com"
        echo "Frontend: https://${{ secrets.HEROKU_APP_NAME_FRONTEND }}.herokuapp.com"
    
    - name: Deployment Failed
      if: needs.deploy-backend.result == 'failure' || needs.deploy-frontend.result == 'failure'
      run: |
        echo "‚ùå Deployment failed!"
        echo "Check the logs above for details."
        exit 1

# Required GitHub Secrets:
# - DATABASE_URL: Complete PostgreSQL connection string
# - HEROKU_API_KEY: Your Heroku API key
# - HEROKU_APP_NAME_BACKEND: Name of your backend Heroku app
# - HEROKU_APP_NAME_FRONTEND: Name of your frontend Heroku app  
# - HEROKU_EMAIL: Your Heroku account email
# - FRONTEND_URL: URL of your deployed frontend
